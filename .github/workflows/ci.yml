name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint:
    name: Lint Shell Scripts
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      with:
        check_together: 'yes'
        additional_files: 'pc.sh pc_refactored.sh'
        ignore_paths: 'tests/bats'

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup BATS
      uses: bats-core/bats-action@2.0.0
    
    - name: Run BATS tests
      run: |
        bats tests/*.bats

  test-matrix:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v4
    
    - name: Install BATS
      run: |
        git clone https://github.com/bats-core/bats-core.git
        cd bats-core
        ./install.sh $HOME/.local
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Run tests
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        bats --version
        bats tests/*.bats

  coverage:
    name: Check Test Coverage
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Generate coverage report
      run: |
        ./maskfile.md coverage || echo "No mask installed, skipping coverage"

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          pc.sh
          pc_refactored.sh
          install.sh
          LICENSE*
        generate_release_notes: true